#!/usr/bin/env bash
# File          : install.sh
# Created       : Fri 23 Oct 2015 23:15:47
# Modified      : <2017-1-22 Sun 23:52:24 GMT> sharlatan
# Maintainer    : sharlatan, <sharlatanus@gmail.com>
# License       : Same as Bash (GPL)
# Credits:      : https://dot.github.io/

# Install Working Inventory #
      ##################
      #  _          _  #
      # (_)        (_) #
      #  __      __    #
      # | \ \ /\ / / | #
      # | |\ V  V /| | #
      # |_| \_/\_/ |_| #
      #                #
      ##################

# This scrip includes package installation and system update. In this case
# you need run it under Root user, or use sudo.

############################################################################
#                     -=:[GLOBAL VARIABLE DEFINITIONS ]:=-                 #
############################################################################
# Variable definition part

ABS_PATH="$(dirname $(readlink -f $0))"

USR_PATH="/home/$(logname)"
SET_LIST="$(grep -oP "[A-Z]{1,2}(\s\w+){1,2}" "${ABS_PATH}/inv/pack.inv" | sort)"
DOT_LIST="$(ls "${ABS_PATH}/dot")"

# supported package managers
PACKAGE_MANAGERS=(dnf yum pacman emerge zypp apt)
# TODO: List all dependencies command, which are not part of BASH built-in
DEPENDENCIES=()

#

############################################################################
#                     -=:[GLOBAL FUNCTIONS DEFINITIONS ]:=-                #
############################################################################
# Required function for convenient installation.

OPTIONS=":hards:"
_help() {
     cat << EOF
NAME
        iwi - install working inv

SYNOPSIS

        iwi [OPTION ...] [-hards]

OPTIONS

        -h   Show this message.
        -a   All, install everthing.

        -r   Add extra repositoris.
        -d   Link all dot to $USR_PATH.
        -s   Install set of packages.

Report bugs to: sharlataus@gmail.com
IWI development page: https://github.com/Hellseher/iwi
EOF
 }

_yes_no() {
    printf  "\nListed will be installed [y/N]: "
    read -t 10 yes_no

    if [[ "$yes_no" != "y" ]]; then
        echo "See you..."
        exit 1
    fi
}

_package_manager() {
    #
    # Use appropriate package manager to instal.
    #
    #echo ${PACKAGE_MANAGERS[*]}
    #exit 1
    if [[ -x "$(command -v dnf)" ]]; then
        dnf update
        dnf install $(_set_list) || { echo "Failed"; exit 0; }
    elif [[ -x "$(command -v yum)" ]]; then
        yum update
        yum install $(_set_list)
        exit 0
    elif [[ -x "$(command -v apt-get)" ]]; then
        apt-get update
        apt-get install $(_set_list)
        exit 0
    else
        echo "Non of ${PACKAGE_MANAGERS[*]} was found."
        exit 1
    fi
}

# Lists
_set_list() {
    #
    # Parse inv/pack.inv file, and list them to stdout;
    #
    if [ $get_set == "A" ] || [ $get_set == "all" ]; then
        grep -vP "[A-Z]|\}|^$" ./inv/pack.inv
    fi
echo test 1 2 3
    sed -n "/$get_set/,/\}/{/$get_set/d;/\}/d;p;}" ./inv/pack.inv
}

_repo_list() {
    # TODO: create repository list for each package manager.
    echo "Hello world!"
}

# Installation functions
_set_install() {
    #
    # Install set of packages;
    #
    echo 1 2 3
    _set_list
    _yes_no

    # Give set list to detected package manager.
    _package_manager
}

_dot_link() {
    #
    # Link all dot files to $(HOME)
    #
    echo "${DOT_LIST}"

    _yes_no

    for dot_file in ${DOT_LIST}; do
        ln -sf "${ABS_PATH}/dot/$dot_file" "${USR_PATH}/.$dot_file"
    done
}

_all_install() {
    #TODO emplement complete installation (repo add, upgrade, package install,
    # dot linking.
    echo "Hello World!"
}

_no_option() {
    case $OPTARG in
        s)
            echo Aveilable sets for installation:
            printf "\n${SET_LIST}\n" >&2 && exit 1
            ;;
        d)
            echo Ddddd!
    esac
}
#

# ------------------------------------------------------------------------------
#+MAIN

main () {
    [ "$(id -i)" == "0" ] || { echo "Run as root." && exit 1; }

    if [[ $# -eq 0 ]]; then
        printf "No arguments provided\n\n"
        _help && exit 1
    fi

    while getopts "${OPTIONS}" opt; do
        case $opt in
            h)
                _help && exit 1
                ;;
            a)
                echo Complete Installation!
                ;;
            d)
                _dot_link && exit 0
                ;;
            r)
                echo Add repository!
                ;;
            s)
                echo ${OPTARG}
                get_set="$OPTARG"
                _set_install
                ;;
            \?) echo "Unknown option: -$OPTARG" >&2 && echo
                _help && exit 1
                ;;
            :)
                ;;
            *) echo "Unimplemented option: -$OPTARG" >&2
               exit 1
               ;;
        esac
    done}

main "$@"
# iwi ends here
