#! /bin/sh
# File          :  install.sh
# Created       :  Fri 23 Oct 2015 23:15:47
# Last Modified :  Fri 08 Jan 2016 04:47:41
# Maintainer    :  sharlatan, <sharlatanus@gmail.com>
# License       :  Same as Bash (GPL)
# Credits:
#
# Intallation of Install Working Invironment
#  _          _ 
# (_)        (_)
#  ___      ___ 
# | \ \ /\ / / |
# | |\ V  V /| |
# |_| \_/\_/ |_|
#               

ABS_PATH="$(dirname $(readlink -f $0))"
USR_PATH="$(echo ${ABS_PATH} | grep -oP "\/home\/\w+")"
SET_LIST="$(grep -oP "[A-Z]\[.+" "${ABS_PATH}/cfg" | sort)"
DOT_LIST="$(ls "${ABS_PATH}/dotfiles")"

HL="--------------------"


if [[ $UID -ne 0 ]]; then
    echo Run as root
    exit 1
fi

# -=:[ FUNCTIONS ]:=-                                                        {{{
#
# Required function for convenient installation. 
#

__help() {
     cat << EOF
usage: $0 [-hadrs]
    -h   Show this message.
    -a   Complete installation.

    -d   Link all dotfiles to $USR_PATH.
    -r   Add extra repositoris.
    -s   Install set of packages.
EOF
 }

__package_manager() {
    #
    # Use appropriate packet manager to instal.
    #
    if [[ -x "$(command -v dnf)" ]]; then
        dnf update
        xargs -a $1 dnf install -yq
        exit 0
    elif [[ -x "$(command -v yum)" ]]; then
        yum update
        xargs -a $1 yum install -yq
        exit 0
    elif [[ -x "$(command -v apt-get)" ]]; then
        apt-get update
        xargs -a $1 apt-get install -yq
        exit 0
    else 
        echo Non of yum, dnf, apg-get was found.
        exit 1
    fi
}

__set_list() {
    #
    # Parse cfg file, and show specific sets
    #
    echo $1
    sed -n '/_$1/,/$1_/{/_$1/b;/$1_/b;p}' "${ABS_PATH}/cfg"
}

__set_menu() {
    #
    # Menu for set option, grab variables from cfg
    #
    echo Available:
    echo ${HL}
    PS3="> "
    # select SET in ${SET_LIST[@]}; do
        #case $SET in
        #    "SYSTEM")
        #        echo one
        #        echo ${SYSTEM}
        #        break
        #        ;;
        #    2)
        #        echo ${DEVELOPMENT}
        #        break
        #        ;;
        #    3)
        #        echo ${LANGUAGES}
        #        break
        #        ;;
        #    4)
        #        echo ${MEDIA}
        #        break
        #        ;;
        #    5)
        #        echo ${OFFICE}
        #        break
        #        ;;
        #    6)
        #        echo ${ALL}
        #        break
        #        ;;
        #    *)
        #        echo Invalid option selected
        #        ;;
        #esac
    #done#
}

__set_install() {
    #
    # Install set of packages;
    #
    echo

}

__dot_link() {
    #
    # Link all dot files to $(HOME)
    #
    printf "Files will be linked to ${USR_PATH}\n${DOT_LIST}"
    for dot_file in ${DOT_LIST}; do
        ln -sf "${ABS_PATH}/dotfiles/$dot_file" "${USR_PATH}/.$dot_file"
    done
}
# }}}

# -=:[ MAIN ]:=-{{{
#
# Meaty part of the installation
#

if [[ $# -eq 0 ]]; then
    printf "No arguments provided\n\n"
    __help && exit 1
fi

OPTIONS=":hadrs:"
while getopts "${OPTIONS}" opt; do
    case $opt in
        h) 
            __help && exit 1
            ;;
        a)
            echo Complete Installation!
            ;;
        d)
            __dot_link exit 0
            ;;
        r)
            echo Add repository!
            ;;
        s)
            get_set=($OPTARG)
            ;;
        \?) echo "Unknown option: -$OPTARG" >&2 && echo
            __help && exit 1
            ;;
        :) 
            echo Aveilable sets for installation:
            printf "\n${SET_LIST}\n" >&2 && exit 1
            ;;
        *) echo "Unimplemented option: -$OPTARG" >&2
            exit 1
            ;;
    esac
done

__set_list $get_set

# }}}
