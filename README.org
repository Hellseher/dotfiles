# File     : README..org
# Created  : Sun 10 Jan 2016 21:23:39
# Modified : <2019-5-02 Thu 20:02:52 BST> Sharlatan

#+TITLE: IWI
#+AUTHOR: Sharlatan <sharlatanus@gmail.com>
/Install Working Inventory/

* Synopsis

The aim of IWI is to make tuning of GNU/Linux machine more consistent and
controlled. If you have your own dotfiles, necessary list of packages you using
constantly or you want to create a set of packages for specific purposes, you
can use IWI.
-----

* Manifest
** Structure
#+BEGIN_SRC sh  :results value org :results output replace :exports results
tree -L 2
#+END_SRC

#+RESULTS:
#+begin_src org
.
├── dot
│   ├── bashrc
│   ├── config
│   ├── gitconfig
│   ├── gitignore
│   ├── init.el
│   ├── sbclrc
│   ├── sbclrc.fasl
│   ├── spacemacs
│   ├── stumpwm.d
│   ├── tmux.conf
│   ├── vimrc
│   └── xmodmaprc
├── iwi-ansible
│   ├── ansible.cfg
│   ├── group_vars
│   ├── host_vars
│   ├── inventory.ini
│   ├── iwi.retry
│   ├── iwi.yml
│   └── roles
├── iwi-shell-bash
│   ├── inv
│   ├── iwi
│   └── utils
├── LICENSE
└── README.org

10 directories, 17 files
#+end_src

** Packages

** Languages
*** Common packages/binary written in a language X
| LANG | TYPE       | NAME      |
|------+------------+-----------|
| Rust | completion | racer     |
| Rust | listing    | exa       |
| Rust | find-tool  | rustfmt   |
| Rust | grep-tool  | ripgrep   |
| Rust | searching  | fd-find   |
| Rust | terminal   | alacritty |

** Shells support

** Editors support

* Chose your way
** iwi-shell-bash
It's just a BASH script with extra config files looks like a list of packages
separated by sets.

** iwi-ansible
Fully automated Ansible playbook.

#+BEGIN_EXAMPLE
~$ cd iwi-ansible
~$ ./iwi.yml
#+END_EXAMPLE

#+BEGIN_SRC sh  :results value org :results output replace :exports results
./iwi-ansible/iwi.yml --list-tasks
#+END_SRC

#+RESULTS:
#+begin_src org

playbook: ./iwi-ansible/iwi.yml

  play #1 (self): self	TAGS: []
    tasks:
      test url	TAGS: []
      debug	TAGS: []
      debug	TAGS: []
#+end_src

** iwi-terraform
* Tested on

#+BEGIN_SRC sh  :results value org :results output replace :exports results
printf "Workstation\n-----------\n"
printf "SYS\t: %s\n" "$(uname -sori)"
printf "CPU\t: %s\n" "$(grep -m 1 -oP "(?<=model\sname\s:\s).+" /proc/cpuinfo)"
printf "DISTR\t: %s\n" "$(lsb_release -sd)"
echo
printf "Enviroment\n----------\n"
printf "BASH\t: %s\n" "$(bash --version 2>&1 | head -n1)"
printf "PYTHON\t: %s\n" "$(python --version 2>&1)"
printf "ANSIBLE\t: %s\n" "$(ansible --version 2>&1 | head -n1)"
#+END_SRC

#+RESULTS:
#+begin_src org
Workstation
-----------
SYS	: Linux 5.0.9-301.fc30.x86_64 x86_64 GNU/Linux
CPU	: Intel(R) Core(TM) i7-3770S CPU @ 3.10GHz
DISTR	:

Enviroment
----------
BASH	: GNU bash, version 5.0.2(1)-release (x86_64-redhat-linux-gnu)
PYTHON	: Python 2.7.16
ANSIBLE	: ansible 2.7.10
#+end_src

* References
-  GNU stow https://www.gnu.org/software/stow/
-  FAI http://fai-project.org/
-  Cobber http://cobbler.github.io/
-  Spacewalk http://spacewalk.redhat.com/
-  OpenQRM http://www.openqrm-enterprise.com/
-  Ansible https://www.ansible.com/
